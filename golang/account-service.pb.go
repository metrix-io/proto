// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/account-service.proto

package golang // import "github.com/metrix-io/proto/golang"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// *
// Account represents a user account.
//
// An account only contain the user's primary email address and
// phone number (if available). To view a secondary phone numbers
// or email addresses use one of the other RPC methods.
type Account struct {
	// The identifier of the user.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Subject is the fully qualified security identifier for this account.
	Sub string `protobuf:"bytes,2,opt,name=sub,proto3" json:"sub,omitempty"`
	// Username. The maximum length is 15 characters.
	Username string `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	// User's preferred e-mail address.
	Email string `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	// True if the user's e-mail address has been verified; otherwise false.
	EmailVerified bool     `protobuf:"varint,5,opt,name=email_verified,json=emailVerified,proto3" json:"email_verified,omitempty"`
	Profile       *Profile `protobuf:"bytes,6,opt,name=profile,proto3" json:"profile,omitempty"`
	// User's preferred phone number.
	PhoneNumber string `protobuf:"bytes,7,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	// True if the user's phone number has been verified; otherwise false.
	PhoneNumberVerified bool `protobuf:"varint,8,opt,name=phone_number_verified,json=phoneNumberVerified,proto3" json:"phone_number_verified,omitempty"`
	// Unix timestamp when user account was created.
	CreatedAt int64 `protobuf:"varint,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Unix timestamp when user information was last updated.
	UpdatedAt int64 `protobuf:"varint,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// Unix timestamp when account was cancelled. Cancelled accounts are
	// automatically removed after one month.
	CancelledAt int64 `protobuf:"varint,11,opt,name=cancelled_at,json=cancelledAt,proto3" json:"cancelled_at,omitempty"`
	// Unix timestamp when account was last logged in.
	LastLoginAt          int64    `protobuf:"varint,12,opt,name=last_login_at,json=lastLoginAt,proto3" json:"last_login_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Account) Reset()         { *m = Account{} }
func (m *Account) String() string { return proto.CompactTextString(m) }
func (*Account) ProtoMessage()    {}
func (*Account) Descriptor() ([]byte, []int) {
	return fileDescriptor_account_service_c58e525af6a3ba68, []int{0}
}
func (m *Account) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Account.Unmarshal(m, b)
}
func (m *Account) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Account.Marshal(b, m, deterministic)
}
func (dst *Account) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Account.Merge(dst, src)
}
func (m *Account) XXX_Size() int {
	return xxx_messageInfo_Account.Size(m)
}
func (m *Account) XXX_DiscardUnknown() {
	xxx_messageInfo_Account.DiscardUnknown(m)
}

var xxx_messageInfo_Account proto.InternalMessageInfo

func (m *Account) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Account) GetSub() string {
	if m != nil {
		return m.Sub
	}
	return ""
}

func (m *Account) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *Account) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Account) GetEmailVerified() bool {
	if m != nil {
		return m.EmailVerified
	}
	return false
}

func (m *Account) GetProfile() *Profile {
	if m != nil {
		return m.Profile
	}
	return nil
}

func (m *Account) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *Account) GetPhoneNumberVerified() bool {
	if m != nil {
		return m.PhoneNumberVerified
	}
	return false
}

func (m *Account) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *Account) GetUpdatedAt() int64 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

func (m *Account) GetCancelledAt() int64 {
	if m != nil {
		return m.CancelledAt
	}
	return 0
}

func (m *Account) GetLastLoginAt() int64 {
	if m != nil {
		return m.LastLoginAt
	}
	return 0
}

// *
// Profile is based loosely on the OpenID Connect userinfo specification:
// https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims
//
// Be aware most fields are usually empty.
type Profile struct {
	// End-User's full name. The maximum length is 100 characters.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// First name(s) of the user. The maximum length is 30 characters.
	FirstName string `protobuf:"bytes,2,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	// Last name(s) of the user. The maximum length is 30 characters.
	LastName string `protobuf:"bytes,3,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	// Middle name(s) of the user. The maximum length is 30 characters.
	MiddleName string `protobuf:"bytes,4,opt,name=middle_name,json=middleName,proto3" json:"middle_name,omitempty"`
	// Casual name of the user that may or may not be the same as the given_name.
	// The maximum length is 15 characters.
	Nickname string `protobuf:"bytes,5,opt,name=nickname,proto3" json:"nickname,omitempty"`
	// URL of user profile page. The maximum length is 255 characters.
	Profile string `protobuf:"bytes,6,opt,name=profile,proto3" json:"profile,omitempty"`
	// URL of user picture. The maximum length is 255 characters.
	Picture string `protobuf:"bytes,7,opt,name=picture,proto3" json:"picture,omitempty"`
	// URL of user web page or blog.
	Website string `protobuf:"bytes,8,opt,name=website,proto3" json:"website,omitempty"`
	// The gender is either "male", "female", "genderqueer" or empty.
	Gender string `protobuf:"bytes,9,opt,name=gender,proto3" json:"gender,omitempty"`
	// User's birthday is formatted in YYYY-MM-DD format.
	Birthdate string `protobuf:"bytes,10,opt,name=birthdate,proto3" json:"birthdate,omitempty"`
	// String from a time zone database representing the user's time zone.
	Zoneinfo string `protobuf:"bytes,11,opt,name=zoneinfo,proto3" json:"zoneinfo,omitempty"`
	// User's locale, represented as a BCP47 [RFC5646] language tag.
	Locale               string   `protobuf:"bytes,12,opt,name=locale,proto3" json:"locale,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Profile) Reset()         { *m = Profile{} }
func (m *Profile) String() string { return proto.CompactTextString(m) }
func (*Profile) ProtoMessage()    {}
func (*Profile) Descriptor() ([]byte, []int) {
	return fileDescriptor_account_service_c58e525af6a3ba68, []int{1}
}
func (m *Profile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Profile.Unmarshal(m, b)
}
func (m *Profile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Profile.Marshal(b, m, deterministic)
}
func (dst *Profile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Profile.Merge(dst, src)
}
func (m *Profile) XXX_Size() int {
	return xxx_messageInfo_Profile.Size(m)
}
func (m *Profile) XXX_DiscardUnknown() {
	xxx_messageInfo_Profile.DiscardUnknown(m)
}

var xxx_messageInfo_Profile proto.InternalMessageInfo

func (m *Profile) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Profile) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *Profile) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *Profile) GetMiddleName() string {
	if m != nil {
		return m.MiddleName
	}
	return ""
}

func (m *Profile) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

func (m *Profile) GetProfile() string {
	if m != nil {
		return m.Profile
	}
	return ""
}

func (m *Profile) GetPicture() string {
	if m != nil {
		return m.Picture
	}
	return ""
}

func (m *Profile) GetWebsite() string {
	if m != nil {
		return m.Website
	}
	return ""
}

func (m *Profile) GetGender() string {
	if m != nil {
		return m.Gender
	}
	return ""
}

func (m *Profile) GetBirthdate() string {
	if m != nil {
		return m.Birthdate
	}
	return ""
}

func (m *Profile) GetZoneinfo() string {
	if m != nil {
		return m.Zoneinfo
	}
	return ""
}

func (m *Profile) GetLocale() string {
	if m != nil {
		return m.Locale
	}
	return ""
}

// *
// Email contains an email address. Email addresses are always unique.
type Email struct {
	// Unique email identifier.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The account to which this email belongs. An email can only belong
	// to 1 account.
	AccountId string `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// Email address.
	Email string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	// True if this email address has been verified; otherwise false.
	IsVerified bool `protobuf:"varint,4,opt,name=is_verified,json=isVerified,proto3" json:"is_verified,omitempty"`
	// True if this is the user's preferred email address. Only 1 email address
	// can be primary.
	IsPrimary bool `protobuf:"varint,5,opt,name=is_primary,json=isPrimary,proto3" json:"is_primary,omitempty"`
	// Unix timestamp when email was created.
	CreatedAt int64 `protobuf:"varint,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Unix timestamp when email was last updated.
	UpdatedAt            int64    `protobuf:"varint,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Email) Reset()         { *m = Email{} }
func (m *Email) String() string { return proto.CompactTextString(m) }
func (*Email) ProtoMessage()    {}
func (*Email) Descriptor() ([]byte, []int) {
	return fileDescriptor_account_service_c58e525af6a3ba68, []int{2}
}
func (m *Email) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Email.Unmarshal(m, b)
}
func (m *Email) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Email.Marshal(b, m, deterministic)
}
func (dst *Email) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Email.Merge(dst, src)
}
func (m *Email) XXX_Size() int {
	return xxx_messageInfo_Email.Size(m)
}
func (m *Email) XXX_DiscardUnknown() {
	xxx_messageInfo_Email.DiscardUnknown(m)
}

var xxx_messageInfo_Email proto.InternalMessageInfo

func (m *Email) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Email) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *Email) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Email) GetIsVerified() bool {
	if m != nil {
		return m.IsVerified
	}
	return false
}

func (m *Email) GetIsPrimary() bool {
	if m != nil {
		return m.IsPrimary
	}
	return false
}

func (m *Email) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *Email) GetUpdatedAt() int64 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

type GetAccountByIDRequest struct {
	AccountId            string   `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAccountByIDRequest) Reset()         { *m = GetAccountByIDRequest{} }
func (m *GetAccountByIDRequest) String() string { return proto.CompactTextString(m) }
func (*GetAccountByIDRequest) ProtoMessage()    {}
func (*GetAccountByIDRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_account_service_c58e525af6a3ba68, []int{3}
}
func (m *GetAccountByIDRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAccountByIDRequest.Unmarshal(m, b)
}
func (m *GetAccountByIDRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAccountByIDRequest.Marshal(b, m, deterministic)
}
func (dst *GetAccountByIDRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAccountByIDRequest.Merge(dst, src)
}
func (m *GetAccountByIDRequest) XXX_Size() int {
	return xxx_messageInfo_GetAccountByIDRequest.Size(m)
}
func (m *GetAccountByIDRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAccountByIDRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAccountByIDRequest proto.InternalMessageInfo

func (m *GetAccountByIDRequest) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

// *
// CreateAccountRequest creates a new account.
//
// Returns a FailedPrecondition error if the email is already in use.
// Returns InvalidArgument errors if any of the fields are invalid.
type CreateAccountRequest struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Username             string   `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Password             string   `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	Profile              *Profile `protobuf:"bytes,4,opt,name=profile,proto3" json:"profile,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateAccountRequest) Reset()         { *m = CreateAccountRequest{} }
func (m *CreateAccountRequest) String() string { return proto.CompactTextString(m) }
func (*CreateAccountRequest) ProtoMessage()    {}
func (*CreateAccountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_account_service_c58e525af6a3ba68, []int{4}
}
func (m *CreateAccountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateAccountRequest.Unmarshal(m, b)
}
func (m *CreateAccountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateAccountRequest.Marshal(b, m, deterministic)
}
func (dst *CreateAccountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateAccountRequest.Merge(dst, src)
}
func (m *CreateAccountRequest) XXX_Size() int {
	return xxx_messageInfo_CreateAccountRequest.Size(m)
}
func (m *CreateAccountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateAccountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateAccountRequest proto.InternalMessageInfo

func (m *CreateAccountRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *CreateAccountRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *CreateAccountRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *CreateAccountRequest) GetProfile() *Profile {
	if m != nil {
		return m.Profile
	}
	return nil
}

// *
// UpdateAccountRequest allows to update user profile details.
type UpdateAccountRequest struct {
	AccountId            string   `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Profile              *Profile `protobuf:"bytes,3,opt,name=profile,proto3" json:"profile,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateAccountRequest) Reset()         { *m = UpdateAccountRequest{} }
func (m *UpdateAccountRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateAccountRequest) ProtoMessage()    {}
func (*UpdateAccountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_account_service_c58e525af6a3ba68, []int{5}
}
func (m *UpdateAccountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateAccountRequest.Unmarshal(m, b)
}
func (m *UpdateAccountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateAccountRequest.Marshal(b, m, deterministic)
}
func (dst *UpdateAccountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateAccountRequest.Merge(dst, src)
}
func (m *UpdateAccountRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateAccountRequest.Size(m)
}
func (m *UpdateAccountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateAccountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateAccountRequest proto.InternalMessageInfo

func (m *UpdateAccountRequest) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *UpdateAccountRequest) GetProfile() *Profile {
	if m != nil {
		return m.Profile
	}
	return nil
}

// *
// UpdateAccount sends an empty response when the account has
// successfully been updated.
//
// Returns InvalidArgument errors if any of the fields are invalid.
type UpdateAccountResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateAccountResponse) Reset()         { *m = UpdateAccountResponse{} }
func (m *UpdateAccountResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateAccountResponse) ProtoMessage()    {}
func (*UpdateAccountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_account_service_c58e525af6a3ba68, []int{6}
}
func (m *UpdateAccountResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateAccountResponse.Unmarshal(m, b)
}
func (m *UpdateAccountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateAccountResponse.Marshal(b, m, deterministic)
}
func (dst *UpdateAccountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateAccountResponse.Merge(dst, src)
}
func (m *UpdateAccountResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateAccountResponse.Size(m)
}
func (m *UpdateAccountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateAccountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateAccountResponse proto.InternalMessageInfo

// *
// CheckCredentialsRequest verifies if a username/email + password
// combination is valid. The login-field may contain either a
// username or email address.
type CheckCredentialsRequest struct {
	Login                string   `protobuf:"bytes,1,opt,name=login,proto3" json:"login,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckCredentialsRequest) Reset()         { *m = CheckCredentialsRequest{} }
func (m *CheckCredentialsRequest) String() string { return proto.CompactTextString(m) }
func (*CheckCredentialsRequest) ProtoMessage()    {}
func (*CheckCredentialsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_account_service_c58e525af6a3ba68, []int{7}
}
func (m *CheckCredentialsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckCredentialsRequest.Unmarshal(m, b)
}
func (m *CheckCredentialsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckCredentialsRequest.Marshal(b, m, deterministic)
}
func (dst *CheckCredentialsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckCredentialsRequest.Merge(dst, src)
}
func (m *CheckCredentialsRequest) XXX_Size() int {
	return xxx_messageInfo_CheckCredentialsRequest.Size(m)
}
func (m *CheckCredentialsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckCredentialsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CheckCredentialsRequest proto.InternalMessageInfo

func (m *CheckCredentialsRequest) GetLogin() string {
	if m != nil {
		return m.Login
	}
	return ""
}

func (m *CheckCredentialsRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

// *
// CheckCredentialsResponse is an empty response indicating
// the credentials are valid. If the credentials are invalid an
// Unauthenticated status code is returned instead.
type CheckCredentialsResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckCredentialsResponse) Reset()         { *m = CheckCredentialsResponse{} }
func (m *CheckCredentialsResponse) String() string { return proto.CompactTextString(m) }
func (*CheckCredentialsResponse) ProtoMessage()    {}
func (*CheckCredentialsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_account_service_c58e525af6a3ba68, []int{8}
}
func (m *CheckCredentialsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckCredentialsResponse.Unmarshal(m, b)
}
func (m *CheckCredentialsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckCredentialsResponse.Marshal(b, m, deterministic)
}
func (dst *CheckCredentialsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckCredentialsResponse.Merge(dst, src)
}
func (m *CheckCredentialsResponse) XXX_Size() int {
	return xxx_messageInfo_CheckCredentialsResponse.Size(m)
}
func (m *CheckCredentialsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckCredentialsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CheckCredentialsResponse proto.InternalMessageInfo

// *
// ResendVerificationRequest schedules a reset password email.
//
// The link expires after 3 hours.
type ForgotPasswordRequest struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ForgotPasswordRequest) Reset()         { *m = ForgotPasswordRequest{} }
func (m *ForgotPasswordRequest) String() string { return proto.CompactTextString(m) }
func (*ForgotPasswordRequest) ProtoMessage()    {}
func (*ForgotPasswordRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_account_service_c58e525af6a3ba68, []int{9}
}
func (m *ForgotPasswordRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ForgotPasswordRequest.Unmarshal(m, b)
}
func (m *ForgotPasswordRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ForgotPasswordRequest.Marshal(b, m, deterministic)
}
func (dst *ForgotPasswordRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ForgotPasswordRequest.Merge(dst, src)
}
func (m *ForgotPasswordRequest) XXX_Size() int {
	return xxx_messageInfo_ForgotPasswordRequest.Size(m)
}
func (m *ForgotPasswordRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ForgotPasswordRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ForgotPasswordRequest proto.InternalMessageInfo

func (m *ForgotPasswordRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

// *
// ForgotPassword sends an empty response when a new forgot password
// email has been scheduled. Normally an email arrives within a couple of minutes.
//
// Returns a NotFound error code if the email address did not match any account.
type ForgotPasswordResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ForgotPasswordResponse) Reset()         { *m = ForgotPasswordResponse{} }
func (m *ForgotPasswordResponse) String() string { return proto.CompactTextString(m) }
func (*ForgotPasswordResponse) ProtoMessage()    {}
func (*ForgotPasswordResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_account_service_c58e525af6a3ba68, []int{10}
}
func (m *ForgotPasswordResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ForgotPasswordResponse.Unmarshal(m, b)
}
func (m *ForgotPasswordResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ForgotPasswordResponse.Marshal(b, m, deterministic)
}
func (dst *ForgotPasswordResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ForgotPasswordResponse.Merge(dst, src)
}
func (m *ForgotPasswordResponse) XXX_Size() int {
	return xxx_messageInfo_ForgotPasswordResponse.Size(m)
}
func (m *ForgotPasswordResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ForgotPasswordResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ForgotPasswordResponse proto.InternalMessageInfo

// *
// ResetPassword updates an account password using a reset token as proof.
type ResetPasswordRequest struct {
	ResetToken           string   `protobuf:"bytes,1,opt,name=reset_token,json=resetToken,proto3" json:"reset_token,omitempty"`
	NewPassword          string   `protobuf:"bytes,2,opt,name=new_password,json=newPassword,proto3" json:"new_password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResetPasswordRequest) Reset()         { *m = ResetPasswordRequest{} }
func (m *ResetPasswordRequest) String() string { return proto.CompactTextString(m) }
func (*ResetPasswordRequest) ProtoMessage()    {}
func (*ResetPasswordRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_account_service_c58e525af6a3ba68, []int{11}
}
func (m *ResetPasswordRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResetPasswordRequest.Unmarshal(m, b)
}
func (m *ResetPasswordRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResetPasswordRequest.Marshal(b, m, deterministic)
}
func (dst *ResetPasswordRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResetPasswordRequest.Merge(dst, src)
}
func (m *ResetPasswordRequest) XXX_Size() int {
	return xxx_messageInfo_ResetPasswordRequest.Size(m)
}
func (m *ResetPasswordRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ResetPasswordRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ResetPasswordRequest proto.InternalMessageInfo

func (m *ResetPasswordRequest) GetResetToken() string {
	if m != nil {
		return m.ResetToken
	}
	return ""
}

func (m *ResetPasswordRequest) GetNewPassword() string {
	if m != nil {
		return m.NewPassword
	}
	return ""
}

// *
// ResetPassword sends an empty response when the password was updated
// successfully.
//
// Returns an NotFound error if the reset token does not exist or has
// expired.
type ResetPasswordResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResetPasswordResponse) Reset()         { *m = ResetPasswordResponse{} }
func (m *ResetPasswordResponse) String() string { return proto.CompactTextString(m) }
func (*ResetPasswordResponse) ProtoMessage()    {}
func (*ResetPasswordResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_account_service_c58e525af6a3ba68, []int{12}
}
func (m *ResetPasswordResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResetPasswordResponse.Unmarshal(m, b)
}
func (m *ResetPasswordResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResetPasswordResponse.Marshal(b, m, deterministic)
}
func (dst *ResetPasswordResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResetPasswordResponse.Merge(dst, src)
}
func (m *ResetPasswordResponse) XXX_Size() int {
	return xxx_messageInfo_ResetPasswordResponse.Size(m)
}
func (m *ResetPasswordResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ResetPasswordResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ResetPasswordResponse proto.InternalMessageInfo

// *
// UpdatePasswordRequest changes an account password with a user password as
// verification.
type UpdatePasswordRequest struct {
	AccountId            string   `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	NewPassword          string   `protobuf:"bytes,3,opt,name=new_password,json=newPassword,proto3" json:"new_password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdatePasswordRequest) Reset()         { *m = UpdatePasswordRequest{} }
func (m *UpdatePasswordRequest) String() string { return proto.CompactTextString(m) }
func (*UpdatePasswordRequest) ProtoMessage()    {}
func (*UpdatePasswordRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_account_service_c58e525af6a3ba68, []int{13}
}
func (m *UpdatePasswordRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdatePasswordRequest.Unmarshal(m, b)
}
func (m *UpdatePasswordRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdatePasswordRequest.Marshal(b, m, deterministic)
}
func (dst *UpdatePasswordRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdatePasswordRequest.Merge(dst, src)
}
func (m *UpdatePasswordRequest) XXX_Size() int {
	return xxx_messageInfo_UpdatePasswordRequest.Size(m)
}
func (m *UpdatePasswordRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdatePasswordRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdatePasswordRequest proto.InternalMessageInfo

func (m *UpdatePasswordRequest) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *UpdatePasswordRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *UpdatePasswordRequest) GetNewPassword() string {
	if m != nil {
		return m.NewPassword
	}
	return ""
}

// *
// UpdatePassword sends an empty response when the password was updated
// successfully.
//
// Returns an Unauthenticated error if the password was invalid.
// Returns a NotFound error if the account could not be found.
type UpdatePasswordResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdatePasswordResponse) Reset()         { *m = UpdatePasswordResponse{} }
func (m *UpdatePasswordResponse) String() string { return proto.CompactTextString(m) }
func (*UpdatePasswordResponse) ProtoMessage()    {}
func (*UpdatePasswordResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_account_service_c58e525af6a3ba68, []int{14}
}
func (m *UpdatePasswordResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdatePasswordResponse.Unmarshal(m, b)
}
func (m *UpdatePasswordResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdatePasswordResponse.Marshal(b, m, deterministic)
}
func (dst *UpdatePasswordResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdatePasswordResponse.Merge(dst, src)
}
func (m *UpdatePasswordResponse) XXX_Size() int {
	return xxx_messageInfo_UpdatePasswordResponse.Size(m)
}
func (m *UpdatePasswordResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdatePasswordResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdatePasswordResponse proto.InternalMessageInfo

// *
// VerifyEmailRequest verifies an email address.
//
// Returns an NotFound error if the token is invalid.
// Returns a FailedPrecondition if the email was already verified.
type VerifyEmailRequest struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VerifyEmailRequest) Reset()         { *m = VerifyEmailRequest{} }
func (m *VerifyEmailRequest) String() string { return proto.CompactTextString(m) }
func (*VerifyEmailRequest) ProtoMessage()    {}
func (*VerifyEmailRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_account_service_c58e525af6a3ba68, []int{15}
}
func (m *VerifyEmailRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VerifyEmailRequest.Unmarshal(m, b)
}
func (m *VerifyEmailRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VerifyEmailRequest.Marshal(b, m, deterministic)
}
func (dst *VerifyEmailRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VerifyEmailRequest.Merge(dst, src)
}
func (m *VerifyEmailRequest) XXX_Size() int {
	return xxx_messageInfo_VerifyEmailRequest.Size(m)
}
func (m *VerifyEmailRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VerifyEmailRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VerifyEmailRequest proto.InternalMessageInfo

func (m *VerifyEmailRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

// *
// VerifyEmail sends an empty response when the email was succesfully verified.
type VerifyEmailResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VerifyEmailResponse) Reset()         { *m = VerifyEmailResponse{} }
func (m *VerifyEmailResponse) String() string { return proto.CompactTextString(m) }
func (*VerifyEmailResponse) ProtoMessage()    {}
func (*VerifyEmailResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_account_service_c58e525af6a3ba68, []int{16}
}
func (m *VerifyEmailResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VerifyEmailResponse.Unmarshal(m, b)
}
func (m *VerifyEmailResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VerifyEmailResponse.Marshal(b, m, deterministic)
}
func (dst *VerifyEmailResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VerifyEmailResponse.Merge(dst, src)
}
func (m *VerifyEmailResponse) XXX_Size() int {
	return xxx_messageInfo_VerifyEmailResponse.Size(m)
}
func (m *VerifyEmailResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VerifyEmailResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VerifyEmailResponse proto.InternalMessageInfo

// *
// ResendVerificationRequest requests a new verification email.
// This is useful if the user forgot his or her email addresses.
type ResendVerificationRequest struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResendVerificationRequest) Reset()         { *m = ResendVerificationRequest{} }
func (m *ResendVerificationRequest) String() string { return proto.CompactTextString(m) }
func (*ResendVerificationRequest) ProtoMessage()    {}
func (*ResendVerificationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_account_service_c58e525af6a3ba68, []int{17}
}
func (m *ResendVerificationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResendVerificationRequest.Unmarshal(m, b)
}
func (m *ResendVerificationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResendVerificationRequest.Marshal(b, m, deterministic)
}
func (dst *ResendVerificationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResendVerificationRequest.Merge(dst, src)
}
func (m *ResendVerificationRequest) XXX_Size() int {
	return xxx_messageInfo_ResendVerificationRequest.Size(m)
}
func (m *ResendVerificationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ResendVerificationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ResendVerificationRequest proto.InternalMessageInfo

func (m *ResendVerificationRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

// *
// ResendVerification sends an empty response when a new verification
// email has been scheduled. Normally an email arrives within a couple
// of minutes.
//
// Returns a NotFound error code if the email address did not match
// any account.
//
// Returns a FailedPrecondition error code if the specified email
// address is already verified.
type ResendVerificationResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResendVerificationResponse) Reset()         { *m = ResendVerificationResponse{} }
func (m *ResendVerificationResponse) String() string { return proto.CompactTextString(m) }
func (*ResendVerificationResponse) ProtoMessage()    {}
func (*ResendVerificationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_account_service_c58e525af6a3ba68, []int{18}
}
func (m *ResendVerificationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResendVerificationResponse.Unmarshal(m, b)
}
func (m *ResendVerificationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResendVerificationResponse.Marshal(b, m, deterministic)
}
func (dst *ResendVerificationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResendVerificationResponse.Merge(dst, src)
}
func (m *ResendVerificationResponse) XXX_Size() int {
	return xxx_messageInfo_ResendVerificationResponse.Size(m)
}
func (m *ResendVerificationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ResendVerificationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ResendVerificationResponse proto.InternalMessageInfo

// *
// CancelAccount disables an account and removes all auth tokens
// associated with the account.
//
// Cancelled accounts are completely removed after 14 days.
//
// To regain access to a cancelled account before the account is
// permanently deleted send an email to support@metrix.io
type CancelAccountRequest struct {
	AccountId            string   `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CancelAccountRequest) Reset()         { *m = CancelAccountRequest{} }
func (m *CancelAccountRequest) String() string { return proto.CompactTextString(m) }
func (*CancelAccountRequest) ProtoMessage()    {}
func (*CancelAccountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_account_service_c58e525af6a3ba68, []int{19}
}
func (m *CancelAccountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CancelAccountRequest.Unmarshal(m, b)
}
func (m *CancelAccountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CancelAccountRequest.Marshal(b, m, deterministic)
}
func (dst *CancelAccountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelAccountRequest.Merge(dst, src)
}
func (m *CancelAccountRequest) XXX_Size() int {
	return xxx_messageInfo_CancelAccountRequest.Size(m)
}
func (m *CancelAccountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelAccountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CancelAccountRequest proto.InternalMessageInfo

func (m *CancelAccountRequest) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

// *
// CancelAccount sends an empty response when the account has
// successfully been cancelled.
type CancelAccountResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CancelAccountResponse) Reset()         { *m = CancelAccountResponse{} }
func (m *CancelAccountResponse) String() string { return proto.CompactTextString(m) }
func (*CancelAccountResponse) ProtoMessage()    {}
func (*CancelAccountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_account_service_c58e525af6a3ba68, []int{20}
}
func (m *CancelAccountResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CancelAccountResponse.Unmarshal(m, b)
}
func (m *CancelAccountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CancelAccountResponse.Marshal(b, m, deterministic)
}
func (dst *CancelAccountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelAccountResponse.Merge(dst, src)
}
func (m *CancelAccountResponse) XXX_Size() int {
	return xxx_messageInfo_CancelAccountResponse.Size(m)
}
func (m *CancelAccountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelAccountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CancelAccountResponse proto.InternalMessageInfo

// *
// CheckUsername returns whether a specified username is still
// available.
type CheckUsernameRequest struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckUsernameRequest) Reset()         { *m = CheckUsernameRequest{} }
func (m *CheckUsernameRequest) String() string { return proto.CompactTextString(m) }
func (*CheckUsernameRequest) ProtoMessage()    {}
func (*CheckUsernameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_account_service_c58e525af6a3ba68, []int{21}
}
func (m *CheckUsernameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckUsernameRequest.Unmarshal(m, b)
}
func (m *CheckUsernameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckUsernameRequest.Marshal(b, m, deterministic)
}
func (dst *CheckUsernameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckUsernameRequest.Merge(dst, src)
}
func (m *CheckUsernameRequest) XXX_Size() int {
	return xxx_messageInfo_CheckUsernameRequest.Size(m)
}
func (m *CheckUsernameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckUsernameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CheckUsernameRequest proto.InternalMessageInfo

func (m *CheckUsernameRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

// *
// Returns true if username is available, otherwise false.
type CheckUsernameResponse struct {
	IsAvailable          bool     `protobuf:"varint,1,opt,name=is_available,json=isAvailable,proto3" json:"is_available,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckUsernameResponse) Reset()         { *m = CheckUsernameResponse{} }
func (m *CheckUsernameResponse) String() string { return proto.CompactTextString(m) }
func (*CheckUsernameResponse) ProtoMessage()    {}
func (*CheckUsernameResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_account_service_c58e525af6a3ba68, []int{22}
}
func (m *CheckUsernameResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckUsernameResponse.Unmarshal(m, b)
}
func (m *CheckUsernameResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckUsernameResponse.Marshal(b, m, deterministic)
}
func (dst *CheckUsernameResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckUsernameResponse.Merge(dst, src)
}
func (m *CheckUsernameResponse) XXX_Size() int {
	return xxx_messageInfo_CheckUsernameResponse.Size(m)
}
func (m *CheckUsernameResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckUsernameResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CheckUsernameResponse proto.InternalMessageInfo

func (m *CheckUsernameResponse) GetIsAvailable() bool {
	if m != nil {
		return m.IsAvailable
	}
	return false
}

// *
// CheckEmail returns whether a specified email address is still
// available.
type CheckEmailRequest struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckEmailRequest) Reset()         { *m = CheckEmailRequest{} }
func (m *CheckEmailRequest) String() string { return proto.CompactTextString(m) }
func (*CheckEmailRequest) ProtoMessage()    {}
func (*CheckEmailRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_account_service_c58e525af6a3ba68, []int{23}
}
func (m *CheckEmailRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckEmailRequest.Unmarshal(m, b)
}
func (m *CheckEmailRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckEmailRequest.Marshal(b, m, deterministic)
}
func (dst *CheckEmailRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckEmailRequest.Merge(dst, src)
}
func (m *CheckEmailRequest) XXX_Size() int {
	return xxx_messageInfo_CheckEmailRequest.Size(m)
}
func (m *CheckEmailRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckEmailRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CheckEmailRequest proto.InternalMessageInfo

func (m *CheckEmailRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

// *
// Returns true if email is already in use, otherwise false.
type CheckEmailResponse struct {
	IsAvailable          bool     `protobuf:"varint,1,opt,name=is_available,json=isAvailable,proto3" json:"is_available,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckEmailResponse) Reset()         { *m = CheckEmailResponse{} }
func (m *CheckEmailResponse) String() string { return proto.CompactTextString(m) }
func (*CheckEmailResponse) ProtoMessage()    {}
func (*CheckEmailResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_account_service_c58e525af6a3ba68, []int{24}
}
func (m *CheckEmailResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckEmailResponse.Unmarshal(m, b)
}
func (m *CheckEmailResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckEmailResponse.Marshal(b, m, deterministic)
}
func (dst *CheckEmailResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckEmailResponse.Merge(dst, src)
}
func (m *CheckEmailResponse) XXX_Size() int {
	return xxx_messageInfo_CheckEmailResponse.Size(m)
}
func (m *CheckEmailResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckEmailResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CheckEmailResponse proto.InternalMessageInfo

func (m *CheckEmailResponse) GetIsAvailable() bool {
	if m != nil {
		return m.IsAvailable
	}
	return false
}

func init() {
	proto.RegisterType((*Account)(nil), "metrixio.Account")
	proto.RegisterType((*Profile)(nil), "metrixio.Profile")
	proto.RegisterType((*Email)(nil), "metrixio.Email")
	proto.RegisterType((*GetAccountByIDRequest)(nil), "metrixio.GetAccountByIDRequest")
	proto.RegisterType((*CreateAccountRequest)(nil), "metrixio.CreateAccountRequest")
	proto.RegisterType((*UpdateAccountRequest)(nil), "metrixio.UpdateAccountRequest")
	proto.RegisterType((*UpdateAccountResponse)(nil), "metrixio.UpdateAccountResponse")
	proto.RegisterType((*CheckCredentialsRequest)(nil), "metrixio.CheckCredentialsRequest")
	proto.RegisterType((*CheckCredentialsResponse)(nil), "metrixio.CheckCredentialsResponse")
	proto.RegisterType((*ForgotPasswordRequest)(nil), "metrixio.ForgotPasswordRequest")
	proto.RegisterType((*ForgotPasswordResponse)(nil), "metrixio.ForgotPasswordResponse")
	proto.RegisterType((*ResetPasswordRequest)(nil), "metrixio.ResetPasswordRequest")
	proto.RegisterType((*ResetPasswordResponse)(nil), "metrixio.ResetPasswordResponse")
	proto.RegisterType((*UpdatePasswordRequest)(nil), "metrixio.UpdatePasswordRequest")
	proto.RegisterType((*UpdatePasswordResponse)(nil), "metrixio.UpdatePasswordResponse")
	proto.RegisterType((*VerifyEmailRequest)(nil), "metrixio.VerifyEmailRequest")
	proto.RegisterType((*VerifyEmailResponse)(nil), "metrixio.VerifyEmailResponse")
	proto.RegisterType((*ResendVerificationRequest)(nil), "metrixio.ResendVerificationRequest")
	proto.RegisterType((*ResendVerificationResponse)(nil), "metrixio.ResendVerificationResponse")
	proto.RegisterType((*CancelAccountRequest)(nil), "metrixio.CancelAccountRequest")
	proto.RegisterType((*CancelAccountResponse)(nil), "metrixio.CancelAccountResponse")
	proto.RegisterType((*CheckUsernameRequest)(nil), "metrixio.CheckUsernameRequest")
	proto.RegisterType((*CheckUsernameResponse)(nil), "metrixio.CheckUsernameResponse")
	proto.RegisterType((*CheckEmailRequest)(nil), "metrixio.CheckEmailRequest")
	proto.RegisterType((*CheckEmailResponse)(nil), "metrixio.CheckEmailResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AccountServiceClient is the client API for AccountService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AccountServiceClient interface {
	CreateAccount(ctx context.Context, in *CreateAccountRequest, opts ...grpc.CallOption) (*Account, error)
	CheckUsername(ctx context.Context, in *CheckUsernameRequest, opts ...grpc.CallOption) (*CheckUsernameResponse, error)
	CheckEmail(ctx context.Context, in *CheckEmailRequest, opts ...grpc.CallOption) (*CheckEmailResponse, error)
	CheckCredentials(ctx context.Context, in *CheckCredentialsRequest, opts ...grpc.CallOption) (*CheckCredentialsResponse, error)
	GetAccountByID(ctx context.Context, in *GetAccountByIDRequest, opts ...grpc.CallOption) (*Account, error)
	ForgotPassword(ctx context.Context, in *ForgotPasswordRequest, opts ...grpc.CallOption) (*ForgotPasswordResponse, error)
	ResetPassword(ctx context.Context, in *ResetPasswordRequest, opts ...grpc.CallOption) (*ResetPasswordResponse, error)
	UpdatePassword(ctx context.Context, in *UpdatePasswordRequest, opts ...grpc.CallOption) (*UpdatePasswordResponse, error)
	VerifyEmail(ctx context.Context, in *VerifyEmailRequest, opts ...grpc.CallOption) (*VerifyEmailResponse, error)
	ResendVerification(ctx context.Context, in *ResendVerificationRequest, opts ...grpc.CallOption) (*ResendVerificationResponse, error)
	CancelAccount(ctx context.Context, in *CancelAccountRequest, opts ...grpc.CallOption) (*CancelAccountResponse, error)
}

type accountServiceClient struct {
	cc *grpc.ClientConn
}

func NewAccountServiceClient(cc *grpc.ClientConn) AccountServiceClient {
	return &accountServiceClient{cc}
}

func (c *accountServiceClient) CreateAccount(ctx context.Context, in *CreateAccountRequest, opts ...grpc.CallOption) (*Account, error) {
	out := new(Account)
	err := c.cc.Invoke(ctx, "/metrixio.AccountService/CreateAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) CheckUsername(ctx context.Context, in *CheckUsernameRequest, opts ...grpc.CallOption) (*CheckUsernameResponse, error) {
	out := new(CheckUsernameResponse)
	err := c.cc.Invoke(ctx, "/metrixio.AccountService/CheckUsername", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) CheckEmail(ctx context.Context, in *CheckEmailRequest, opts ...grpc.CallOption) (*CheckEmailResponse, error) {
	out := new(CheckEmailResponse)
	err := c.cc.Invoke(ctx, "/metrixio.AccountService/CheckEmail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) CheckCredentials(ctx context.Context, in *CheckCredentialsRequest, opts ...grpc.CallOption) (*CheckCredentialsResponse, error) {
	out := new(CheckCredentialsResponse)
	err := c.cc.Invoke(ctx, "/metrixio.AccountService/CheckCredentials", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) GetAccountByID(ctx context.Context, in *GetAccountByIDRequest, opts ...grpc.CallOption) (*Account, error) {
	out := new(Account)
	err := c.cc.Invoke(ctx, "/metrixio.AccountService/GetAccountByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) ForgotPassword(ctx context.Context, in *ForgotPasswordRequest, opts ...grpc.CallOption) (*ForgotPasswordResponse, error) {
	out := new(ForgotPasswordResponse)
	err := c.cc.Invoke(ctx, "/metrixio.AccountService/ForgotPassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) ResetPassword(ctx context.Context, in *ResetPasswordRequest, opts ...grpc.CallOption) (*ResetPasswordResponse, error) {
	out := new(ResetPasswordResponse)
	err := c.cc.Invoke(ctx, "/metrixio.AccountService/ResetPassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) UpdatePassword(ctx context.Context, in *UpdatePasswordRequest, opts ...grpc.CallOption) (*UpdatePasswordResponse, error) {
	out := new(UpdatePasswordResponse)
	err := c.cc.Invoke(ctx, "/metrixio.AccountService/UpdatePassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) VerifyEmail(ctx context.Context, in *VerifyEmailRequest, opts ...grpc.CallOption) (*VerifyEmailResponse, error) {
	out := new(VerifyEmailResponse)
	err := c.cc.Invoke(ctx, "/metrixio.AccountService/VerifyEmail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) ResendVerification(ctx context.Context, in *ResendVerificationRequest, opts ...grpc.CallOption) (*ResendVerificationResponse, error) {
	out := new(ResendVerificationResponse)
	err := c.cc.Invoke(ctx, "/metrixio.AccountService/ResendVerification", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) CancelAccount(ctx context.Context, in *CancelAccountRequest, opts ...grpc.CallOption) (*CancelAccountResponse, error) {
	out := new(CancelAccountResponse)
	err := c.cc.Invoke(ctx, "/metrixio.AccountService/CancelAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AccountServiceServer is the server API for AccountService service.
type AccountServiceServer interface {
	CreateAccount(context.Context, *CreateAccountRequest) (*Account, error)
	CheckUsername(context.Context, *CheckUsernameRequest) (*CheckUsernameResponse, error)
	CheckEmail(context.Context, *CheckEmailRequest) (*CheckEmailResponse, error)
	CheckCredentials(context.Context, *CheckCredentialsRequest) (*CheckCredentialsResponse, error)
	GetAccountByID(context.Context, *GetAccountByIDRequest) (*Account, error)
	ForgotPassword(context.Context, *ForgotPasswordRequest) (*ForgotPasswordResponse, error)
	ResetPassword(context.Context, *ResetPasswordRequest) (*ResetPasswordResponse, error)
	UpdatePassword(context.Context, *UpdatePasswordRequest) (*UpdatePasswordResponse, error)
	VerifyEmail(context.Context, *VerifyEmailRequest) (*VerifyEmailResponse, error)
	ResendVerification(context.Context, *ResendVerificationRequest) (*ResendVerificationResponse, error)
	CancelAccount(context.Context, *CancelAccountRequest) (*CancelAccountResponse, error)
}

func RegisterAccountServiceServer(s *grpc.Server, srv AccountServiceServer) {
	s.RegisterService(&_AccountService_serviceDesc, srv)
}

func _AccountService_CreateAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).CreateAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/metrixio.AccountService/CreateAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).CreateAccount(ctx, req.(*CreateAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_CheckUsername_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckUsernameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).CheckUsername(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/metrixio.AccountService/CheckUsername",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).CheckUsername(ctx, req.(*CheckUsernameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_CheckEmail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckEmailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).CheckEmail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/metrixio.AccountService/CheckEmail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).CheckEmail(ctx, req.(*CheckEmailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_CheckCredentials_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckCredentialsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).CheckCredentials(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/metrixio.AccountService/CheckCredentials",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).CheckCredentials(ctx, req.(*CheckCredentialsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_GetAccountByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAccountByIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).GetAccountByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/metrixio.AccountService/GetAccountByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).GetAccountByID(ctx, req.(*GetAccountByIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_ForgotPassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ForgotPasswordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).ForgotPassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/metrixio.AccountService/ForgotPassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).ForgotPassword(ctx, req.(*ForgotPasswordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_ResetPassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResetPasswordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).ResetPassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/metrixio.AccountService/ResetPassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).ResetPassword(ctx, req.(*ResetPasswordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_UpdatePassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePasswordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).UpdatePassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/metrixio.AccountService/UpdatePassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).UpdatePassword(ctx, req.(*UpdatePasswordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_VerifyEmail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VerifyEmailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).VerifyEmail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/metrixio.AccountService/VerifyEmail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).VerifyEmail(ctx, req.(*VerifyEmailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_ResendVerification_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResendVerificationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).ResendVerification(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/metrixio.AccountService/ResendVerification",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).ResendVerification(ctx, req.(*ResendVerificationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_CancelAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CancelAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).CancelAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/metrixio.AccountService/CancelAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).CancelAccount(ctx, req.(*CancelAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AccountService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "metrixio.AccountService",
	HandlerType: (*AccountServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateAccount",
			Handler:    _AccountService_CreateAccount_Handler,
		},
		{
			MethodName: "CheckUsername",
			Handler:    _AccountService_CheckUsername_Handler,
		},
		{
			MethodName: "CheckEmail",
			Handler:    _AccountService_CheckEmail_Handler,
		},
		{
			MethodName: "CheckCredentials",
			Handler:    _AccountService_CheckCredentials_Handler,
		},
		{
			MethodName: "GetAccountByID",
			Handler:    _AccountService_GetAccountByID_Handler,
		},
		{
			MethodName: "ForgotPassword",
			Handler:    _AccountService_ForgotPassword_Handler,
		},
		{
			MethodName: "ResetPassword",
			Handler:    _AccountService_ResetPassword_Handler,
		},
		{
			MethodName: "UpdatePassword",
			Handler:    _AccountService_UpdatePassword_Handler,
		},
		{
			MethodName: "VerifyEmail",
			Handler:    _AccountService_VerifyEmail_Handler,
		},
		{
			MethodName: "ResendVerification",
			Handler:    _AccountService_ResendVerification_Handler,
		},
		{
			MethodName: "CancelAccount",
			Handler:    _AccountService_CancelAccount_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/account-service.proto",
}

func init() {
	proto.RegisterFile("proto/account-service.proto", fileDescriptor_account_service_c58e525af6a3ba68)
}

var fileDescriptor_account_service_c58e525af6a3ba68 = []byte{
	// 1057 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x57, 0xdd, 0x4e, 0xe3, 0x46,
	0x14, 0xc6, 0x09, 0x90, 0xf8, 0x78, 0x41, 0xbb, 0xb3, 0x09, 0xeb, 0x1a, 0x28, 0xe0, 0x6d, 0x25,
	0xda, 0x0a, 0x50, 0xa9, 0xda, 0x4a, 0xbd, 0xcb, 0xb2, 0xdd, 0x0a, 0x75, 0xb5, 0x42, 0x6e, 0xe9,
	0xc5, 0xf6, 0xc2, 0x72, 0xec, 0x21, 0x8c, 0x70, 0xec, 0xd4, 0x9e, 0x40, 0xe9, 0x3b, 0xf4, 0xa2,
	0x8f, 0xd0, 0xd7, 0xe9, 0x45, 0x9f, 0xa9, 0x9a, 0x33, 0xe3, 0x64, 0x3c, 0x31, 0xa1, 0x7b, 0xe7,
	0xf3, 0x9d, 0x33, 0xe7, 0xe7, 0x3b, 0x3f, 0x01, 0xd8, 0x9e, 0x14, 0x39, 0xcf, 0x4f, 0xa2, 0x38,
	0xce, 0xa7, 0x19, 0x3f, 0x2a, 0x69, 0x71, 0xcb, 0x62, 0x7a, 0x8c, 0x28, 0xe9, 0x8e, 0x29, 0x2f,
	0xd8, 0xef, 0x2c, 0xf7, 0xff, 0x6c, 0x43, 0x67, 0x20, 0x6d, 0xc8, 0x26, 0xb4, 0x58, 0xe2, 0x5a,
	0xfb, 0xd6, 0xa1, 0x1d, 0xb4, 0x58, 0x42, 0x9e, 0x42, 0xbb, 0x9c, 0x0e, 0xdd, 0x16, 0x02, 0xe2,
	0x93, 0x78, 0xd0, 0x9d, 0x96, 0xb4, 0xc8, 0xa2, 0x31, 0x75, 0xdb, 0x08, 0xcf, 0x64, 0xd2, 0x83,
	0x35, 0x3a, 0x8e, 0x58, 0xea, 0xae, 0xa2, 0x42, 0x0a, 0xe4, 0x53, 0xd8, 0xc4, 0x8f, 0xf0, 0x96,
	0x16, 0xec, 0x8a, 0xd1, 0xc4, 0x5d, 0xdb, 0xb7, 0x0e, 0xbb, 0xc1, 0x06, 0xa2, 0xbf, 0x28, 0x90,
	0x7c, 0x01, 0x9d, 0x49, 0x91, 0x5f, 0xb1, 0x94, 0xba, 0xeb, 0xfb, 0xd6, 0xa1, 0x73, 0xfa, 0xec,
	0xb8, 0x4a, 0xf1, 0xf8, 0x42, 0x2a, 0x82, 0xca, 0x82, 0x1c, 0xc0, 0x93, 0xc9, 0x75, 0x9e, 0xd1,
	0x30, 0x9b, 0x8e, 0x87, 0xb4, 0x70, 0x3b, 0x18, 0xd0, 0x41, 0xec, 0x1d, 0x42, 0xe4, 0x14, 0xfa,
	0xba, 0xc9, 0x3c, 0x7a, 0x17, 0xa3, 0x3f, 0xd7, 0x6c, 0x67, 0x39, 0xec, 0x02, 0xc4, 0x05, 0x8d,
	0x38, 0x4d, 0xc2, 0x88, 0xbb, 0xf6, 0xbe, 0x75, 0xd8, 0x0e, 0x6c, 0x85, 0x0c, 0xb8, 0x50, 0x4f,
	0x27, 0x49, 0xa5, 0x06, 0xa9, 0x56, 0xc8, 0x80, 0x8b, 0xa4, 0xe2, 0x28, 0x8b, 0x69, 0x9a, 0x4a,
	0x03, 0x07, 0x0d, 0x9c, 0x19, 0x36, 0xe0, 0xc4, 0x87, 0x8d, 0x34, 0x2a, 0x79, 0x98, 0xe6, 0x23,
	0x96, 0x09, 0x9b, 0x27, 0xd2, 0x46, 0x80, 0x6f, 0x05, 0x36, 0xe0, 0xfe, 0xbf, 0x2d, 0xe8, 0xa8,
	0x82, 0x09, 0x81, 0x55, 0x64, 0x5a, 0x76, 0x04, 0xbf, 0x45, 0x16, 0x57, 0xac, 0x28, 0x79, 0x88,
	0x1a, 0xd9, 0x1a, 0x1b, 0x91, 0x77, 0x42, 0xbd, 0x0d, 0x36, 0x86, 0xd0, 0x3b, 0x24, 0x00, 0x54,
	0xee, 0x81, 0x33, 0x66, 0x49, 0x92, 0x52, 0xa9, 0x96, 0x7d, 0x02, 0x09, 0xa1, 0x81, 0x07, 0xdd,
	0x8c, 0xc5, 0x37, 0xa8, 0x5d, 0x93, 0x8f, 0x2b, 0x99, 0xb8, 0xf5, 0x0e, 0xd9, 0xf3, 0x76, 0x08,
	0x0d, 0x8b, 0xf9, 0xb4, 0xa0, 0xaa, 0x13, 0x95, 0x28, 0x34, 0x77, 0x74, 0x58, 0x32, 0x4e, 0x91,
	0x77, 0x3b, 0xa8, 0x44, 0xb2, 0x05, 0xeb, 0x23, 0x9a, 0x25, 0xb4, 0x40, 0x9e, 0xed, 0x40, 0x49,
	0x64, 0x07, 0xec, 0x21, 0x2b, 0xf8, 0xb5, 0x60, 0x15, 0x39, 0xb6, 0x83, 0x39, 0x20, 0xf2, 0xfb,
	0x23, 0xcf, 0x28, 0xcb, 0xae, 0x72, 0xe4, 0xd7, 0x0e, 0x66, 0xb2, 0xf0, 0x98, 0xe6, 0x71, 0x94,
	0x52, 0x64, 0xd5, 0x0e, 0x94, 0xe4, 0xff, 0x63, 0xc1, 0xda, 0xf7, 0x38, 0x8a, 0xe6, 0x78, 0xef,
	0x02, 0xa8, 0xed, 0x08, 0x59, 0x52, 0x51, 0xa9, 0x90, 0xf3, 0x64, 0x3e, 0xcf, 0x6d, 0x7d, 0x9e,
	0xf7, 0xc0, 0x61, 0xe5, 0x7c, 0x9c, 0x56, 0x71, 0x9c, 0x80, 0x95, 0xfa, 0x14, 0xb1, 0x32, 0x9c,
	0x14, 0x6c, 0x1c, 0x15, 0xf7, 0x6a, 0xd8, 0x6d, 0x56, 0x5e, 0x48, 0xc0, 0x18, 0xb2, 0xf5, 0xe5,
	0x43, 0xd6, 0x31, 0x86, 0xcc, 0xff, 0x06, 0xfa, 0x3f, 0x50, 0xae, 0xf6, 0xf5, 0xd5, 0xfd, 0xf9,
	0xeb, 0x80, 0xfe, 0x36, 0xa5, 0x25, 0x37, 0x6a, 0xb1, 0x8c, 0x5a, 0xfc, 0xbf, 0x2c, 0xe8, 0x9d,
	0x61, 0x10, 0xf5, 0xb6, 0x7a, 0x37, 0x2b, 0xd2, 0xd2, 0x8b, 0xd4, 0xd7, 0xbc, 0x65, 0xac, 0xb9,
	0x07, 0xdd, 0x49, 0x54, 0x96, 0x77, 0x79, 0x91, 0x54, 0x03, 0x56, 0xc9, 0xfa, 0x16, 0xaf, 0x3e,
	0xb6, 0xc5, 0xfe, 0x10, 0x7a, 0x97, 0x58, 0x98, 0x91, 0xd2, 0xf2, 0x52, 0xf4, 0x18, 0xed, 0x47,
	0x63, 0xbc, 0x80, 0xbe, 0x11, 0xa3, 0x9c, 0xe4, 0x59, 0x49, 0xfd, 0x1f, 0xe1, 0xc5, 0xd9, 0x35,
	0x8d, 0x6f, 0xce, 0x0a, 0x9a, 0xd0, 0x8c, 0xb3, 0x28, 0x2d, 0x35, 0x4a, 0x70, 0x41, 0x2b, 0x4a,
	0x50, 0xa8, 0x95, 0xdd, 0xaa, 0x97, 0xed, 0x7b, 0xe0, 0x2e, 0x3a, 0x53, 0x81, 0x8e, 0xa0, 0xff,
	0x26, 0x2f, 0x46, 0x39, 0xbf, 0x50, 0xd6, 0x4b, 0x99, 0xf7, 0x5d, 0xd8, 0x32, 0xcd, 0x95, 0xa3,
	0xf7, 0xd0, 0x0b, 0x68, 0x49, 0x17, 0xfc, 0xec, 0x81, 0x53, 0x08, 0x3c, 0xe4, 0xf9, 0x0d, 0xad,
	0x92, 0x06, 0x84, 0x7e, 0x16, 0x88, 0x38, 0x4c, 0x19, 0xbd, 0x0b, 0x8d, 0xec, 0x9d, 0x8c, 0xde,
	0x55, 0xae, 0x04, 0x4d, 0x86, 0x6f, 0x15, 0x74, 0x5a, 0xf1, 0x67, 0x46, 0x7d, 0xa4, 0x49, 0x4b,
	0xd8, 0x5a, 0xc8, 0xa7, 0xbd, 0x98, 0x8f, 0x0b, 0x5b, 0x66, 0x58, 0x95, 0xd0, 0xe7, 0x40, 0x70,
	0xd3, 0xee, 0x71, 0xa5, 0x35, 0x2e, 0xf5, 0xea, 0xa5, 0xe0, 0xf7, 0xe1, 0x79, 0xcd, 0x56, 0xb9,
	0xf8, 0x12, 0x3e, 0x12, 0xc5, 0x66, 0x89, 0x5c, 0xd9, 0x38, 0xe2, 0x2c, 0xcf, 0x96, 0x77, 0x65,
	0x07, 0xbc, 0xa6, 0x27, 0xca, 0xe1, 0xd7, 0xd0, 0x3b, 0xc3, 0x2b, 0xff, 0x41, 0x83, 0x2c, 0x48,
	0x37, 0x9e, 0x29, 0x7f, 0xa7, 0xd0, 0xc3, 0x71, 0xba, 0x54, 0x2b, 0x57, 0xf9, 0xd3, 0xb7, 0xd2,
	0xaa, 0x6f, 0xa5, 0xff, 0x1d, 0xf4, 0x8d, 0x37, 0xd2, 0x99, 0x60, 0x9b, 0x95, 0x61, 0x74, 0x1b,
	0xb1, 0x34, 0x1a, 0xa6, 0xf2, 0x61, 0x37, 0x70, 0x58, 0x39, 0xa8, 0x20, 0xff, 0x33, 0x78, 0x86,
	0x6f, 0x4d, 0x4a, 0x1b, 0x88, 0xf8, 0x16, 0x88, 0x6e, 0xfa, 0xbf, 0x63, 0x9c, 0xfe, 0xdd, 0x81,
	0x4d, 0x55, 0xe7, 0x4f, 0xf2, 0x2f, 0x11, 0xf2, 0x1a, 0x36, 0x6a, 0x27, 0x89, 0x7c, 0x3c, 0x5f,
	0xe4, 0xa6, 0x5b, 0xe5, 0x69, 0x8b, 0xae, 0x34, 0xfe, 0x0a, 0x09, 0x60, 0xa3, 0x56, 0x78, 0xcd,
	0x4b, 0x03, 0x8b, 0xde, 0xde, 0x83, 0x7a, 0x45, 0xff, 0x0a, 0x39, 0x07, 0x98, 0x57, 0x49, 0xb6,
	0x8d, 0x07, 0x3a, 0x4d, 0xde, 0x4e, 0xb3, 0x72, 0xe6, 0xea, 0x57, 0x78, 0x6a, 0x9e, 0x06, 0x72,
	0x60, 0xbc, 0x59, 0xbc, 0x41, 0x9e, 0xbf, 0xcc, 0x64, 0xe6, 0xfc, 0x0d, 0x6c, 0xd6, 0x7f, 0x0d,
	0x88, 0x56, 0x5c, 0xe3, 0xef, 0x44, 0x33, 0x87, 0x97, 0xb0, 0x59, 0x3f, 0x3a, 0xba, 0x9f, 0xc6,
	0xeb, 0xe5, 0xed, 0x3f, 0x6c, 0x30, 0x4b, 0x2f, 0x80, 0x8d, 0xda, 0x55, 0xd1, 0x5b, 0xd3, 0x74,
	0xca, 0xf4, 0xd6, 0x34, 0x9f, 0x23, 0x4c, 0xb5, 0x7e, 0x19, 0xf4, 0x54, 0x1b, 0x4f, 0x95, 0x9e,
	0xea, 0x03, 0x47, 0x65, 0x85, 0xbc, 0x05, 0x47, 0x3b, 0x15, 0x44, 0xeb, 0xea, 0xe2, 0xb5, 0xf1,
	0x76, 0x1f, 0xd0, 0xce, 0xbc, 0x45, 0x40, 0x16, 0xcf, 0x05, 0x79, 0x59, 0xaf, 0xae, 0xf1, 0xfe,
	0x78, 0x9f, 0x2c, 0x37, 0xd2, 0xb9, 0xad, 0x1d, 0x8f, 0xda, 0xd8, 0x37, 0x1c, 0xa3, 0xda, 0xd8,
	0x37, 0x5e, 0x9d, 0x95, 0x57, 0x2f, 0xdf, 0x1f, 0x8c, 0x18, 0xbf, 0x9e, 0x0e, 0x8f, 0xe3, 0x7c,
	0x7c, 0x22, 0xcd, 0x8f, 0x58, 0x7e, 0x22, 0xff, 0x91, 0x18, 0xe5, 0x69, 0x94, 0x8d, 0x86, 0xeb,
	0x28, 0x7d, 0xf5, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x9b, 0xf2, 0x8a, 0xf6, 0x5f, 0x0c, 0x00,
	0x00,
}
