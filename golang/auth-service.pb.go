// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/auth-service.proto

package golang // import "github.com/metrix-io/proto/golang"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// *
// LoginRequest returns an access token if the login credentials
// are valid. The login field may contain either a username or email
// address.
type LoginRequest struct {
	Login                string   `protobuf:"bytes,1,opt,name=login,proto3" json:"login,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginRequest) Reset()         { *m = LoginRequest{} }
func (m *LoginRequest) String() string { return proto.CompactTextString(m) }
func (*LoginRequest) ProtoMessage()    {}
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_auth_service_73dfeeecb5bc5765, []int{0}
}
func (m *LoginRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginRequest.Unmarshal(m, b)
}
func (m *LoginRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginRequest.Marshal(b, m, deterministic)
}
func (dst *LoginRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginRequest.Merge(dst, src)
}
func (m *LoginRequest) XXX_Size() int {
	return xxx_messageInfo_LoginRequest.Size(m)
}
func (m *LoginRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LoginRequest proto.InternalMessageInfo

func (m *LoginRequest) GetLogin() string {
	if m != nil {
		return m.Login
	}
	return ""
}

func (m *LoginRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

// *
// LoginResponse returns an access token.
type LoginResponse struct {
	AccessToken string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	// The lifetime in seconds of the access token.
	ExpiresIn            string   `protobuf:"bytes,2,opt,name=expires_in,json=expiresIn,proto3" json:"expires_in,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginResponse) Reset()         { *m = LoginResponse{} }
func (m *LoginResponse) String() string { return proto.CompactTextString(m) }
func (*LoginResponse) ProtoMessage()    {}
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_auth_service_73dfeeecb5bc5765, []int{1}
}
func (m *LoginResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginResponse.Unmarshal(m, b)
}
func (m *LoginResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginResponse.Marshal(b, m, deterministic)
}
func (dst *LoginResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginResponse.Merge(dst, src)
}
func (m *LoginResponse) XXX_Size() int {
	return xxx_messageInfo_LoginResponse.Size(m)
}
func (m *LoginResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LoginResponse proto.InternalMessageInfo

func (m *LoginResponse) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func (m *LoginResponse) GetExpiresIn() string {
	if m != nil {
		return m.ExpiresIn
	}
	return ""
}

// *
// A permission specifies which a set of actions for a given resource.
//
// A resource name starts with an "mtx:"-prefix followed by a resource identifier
// usually in the form of "mtx:<resource>:<id>:<subresource>:<subid>".
type Permission struct {
	Resource             string   `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
	Actions              []string `protobuf:"bytes,2,rep,name=actions,proto3" json:"actions,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Permission) Reset()         { *m = Permission{} }
func (m *Permission) String() string { return proto.CompactTextString(m) }
func (*Permission) ProtoMessage()    {}
func (*Permission) Descriptor() ([]byte, []int) {
	return fileDescriptor_auth_service_73dfeeecb5bc5765, []int{2}
}
func (m *Permission) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Permission.Unmarshal(m, b)
}
func (m *Permission) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Permission.Marshal(b, m, deterministic)
}
func (dst *Permission) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Permission.Merge(dst, src)
}
func (m *Permission) XXX_Size() int {
	return xxx_messageInfo_Permission.Size(m)
}
func (m *Permission) XXX_DiscardUnknown() {
	xxx_messageInfo_Permission.DiscardUnknown(m)
}

var xxx_messageInfo_Permission proto.InternalMessageInfo

func (m *Permission) GetResource() string {
	if m != nil {
		return m.Resource
	}
	return ""
}

func (m *Permission) GetActions() []string {
	if m != nil {
		return m.Actions
	}
	return nil
}

// *
// GrantPermission adds one or more permissions to a subject.
//
// A subject can either be a user account, organization, role or other and must
// be a valid resource name, e.g. "mtx:account:g921sdfb1lkg".
//
// If the logged in subject has insufficient
type GrantPermissions struct {
	Subject              string        `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty"`
	Permissions          []*Permission `protobuf:"bytes,2,rep,name=permissions,proto3" json:"permissions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GrantPermissions) Reset()         { *m = GrantPermissions{} }
func (m *GrantPermissions) String() string { return proto.CompactTextString(m) }
func (*GrantPermissions) ProtoMessage()    {}
func (*GrantPermissions) Descriptor() ([]byte, []int) {
	return fileDescriptor_auth_service_73dfeeecb5bc5765, []int{3}
}
func (m *GrantPermissions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GrantPermissions.Unmarshal(m, b)
}
func (m *GrantPermissions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GrantPermissions.Marshal(b, m, deterministic)
}
func (dst *GrantPermissions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GrantPermissions.Merge(dst, src)
}
func (m *GrantPermissions) XXX_Size() int {
	return xxx_messageInfo_GrantPermissions.Size(m)
}
func (m *GrantPermissions) XXX_DiscardUnknown() {
	xxx_messageInfo_GrantPermissions.DiscardUnknown(m)
}

var xxx_messageInfo_GrantPermissions proto.InternalMessageInfo

func (m *GrantPermissions) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

func (m *GrantPermissions) GetPermissions() []*Permission {
	if m != nil {
		return m.Permissions
	}
	return nil
}

// *
// RevokePermission removes one or more permissions for a subject.
type RevokePermissions struct {
	Subject              string        `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty"`
	Permissions          []*Permission `protobuf:"bytes,2,rep,name=permissions,proto3" json:"permissions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *RevokePermissions) Reset()         { *m = RevokePermissions{} }
func (m *RevokePermissions) String() string { return proto.CompactTextString(m) }
func (*RevokePermissions) ProtoMessage()    {}
func (*RevokePermissions) Descriptor() ([]byte, []int) {
	return fileDescriptor_auth_service_73dfeeecb5bc5765, []int{4}
}
func (m *RevokePermissions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RevokePermissions.Unmarshal(m, b)
}
func (m *RevokePermissions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RevokePermissions.Marshal(b, m, deterministic)
}
func (dst *RevokePermissions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RevokePermissions.Merge(dst, src)
}
func (m *RevokePermissions) XXX_Size() int {
	return xxx_messageInfo_RevokePermissions.Size(m)
}
func (m *RevokePermissions) XXX_DiscardUnknown() {
	xxx_messageInfo_RevokePermissions.DiscardUnknown(m)
}

var xxx_messageInfo_RevokePermissions proto.InternalMessageInfo

func (m *RevokePermissions) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

func (m *RevokePermissions) GetPermissions() []*Permission {
	if m != nil {
		return m.Permissions
	}
	return nil
}

// *
// Returns all permissions for a subject.
type GetPermissions struct {
	Subject              string        `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty"`
	Permissions          []*Permission `protobuf:"bytes,2,rep,name=permissions,proto3" json:"permissions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GetPermissions) Reset()         { *m = GetPermissions{} }
func (m *GetPermissions) String() string { return proto.CompactTextString(m) }
func (*GetPermissions) ProtoMessage()    {}
func (*GetPermissions) Descriptor() ([]byte, []int) {
	return fileDescriptor_auth_service_73dfeeecb5bc5765, []int{5}
}
func (m *GetPermissions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPermissions.Unmarshal(m, b)
}
func (m *GetPermissions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPermissions.Marshal(b, m, deterministic)
}
func (dst *GetPermissions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPermissions.Merge(dst, src)
}
func (m *GetPermissions) XXX_Size() int {
	return xxx_messageInfo_GetPermissions.Size(m)
}
func (m *GetPermissions) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPermissions.DiscardUnknown(m)
}

var xxx_messageInfo_GetPermissions proto.InternalMessageInfo

func (m *GetPermissions) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

func (m *GetPermissions) GetPermissions() []*Permission {
	if m != nil {
		return m.Permissions
	}
	return nil
}

// *
// Checks if the request call credentials has specified permission(s) on
// a given resource. If at least one permission is not
type HasPermissionsRequest struct {
	Resource             string        `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
	Permissions          []*Permission `protobuf:"bytes,2,rep,name=permissions,proto3" json:"permissions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *HasPermissionsRequest) Reset()         { *m = HasPermissionsRequest{} }
func (m *HasPermissionsRequest) String() string { return proto.CompactTextString(m) }
func (*HasPermissionsRequest) ProtoMessage()    {}
func (*HasPermissionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_auth_service_73dfeeecb5bc5765, []int{6}
}
func (m *HasPermissionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HasPermissionsRequest.Unmarshal(m, b)
}
func (m *HasPermissionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HasPermissionsRequest.Marshal(b, m, deterministic)
}
func (dst *HasPermissionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HasPermissionsRequest.Merge(dst, src)
}
func (m *HasPermissionsRequest) XXX_Size() int {
	return xxx_messageInfo_HasPermissionsRequest.Size(m)
}
func (m *HasPermissionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HasPermissionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HasPermissionsRequest proto.InternalMessageInfo

func (m *HasPermissionsRequest) GetResource() string {
	if m != nil {
		return m.Resource
	}
	return ""
}

func (m *HasPermissionsRequest) GetPermissions() []*Permission {
	if m != nil {
		return m.Permissions
	}
	return nil
}

// *
// An empty response indicates the logged in account has all specified
// permissions. If at least one permission is missing an Unauthenticated error
// response status is returned instead.
type HasPermissionsResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HasPermissionsResponse) Reset()         { *m = HasPermissionsResponse{} }
func (m *HasPermissionsResponse) String() string { return proto.CompactTextString(m) }
func (*HasPermissionsResponse) ProtoMessage()    {}
func (*HasPermissionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_auth_service_73dfeeecb5bc5765, []int{7}
}
func (m *HasPermissionsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HasPermissionsResponse.Unmarshal(m, b)
}
func (m *HasPermissionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HasPermissionsResponse.Marshal(b, m, deterministic)
}
func (dst *HasPermissionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HasPermissionsResponse.Merge(dst, src)
}
func (m *HasPermissionsResponse) XXX_Size() int {
	return xxx_messageInfo_HasPermissionsResponse.Size(m)
}
func (m *HasPermissionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HasPermissionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HasPermissionsResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*LoginRequest)(nil), "metrixio.LoginRequest")
	proto.RegisterType((*LoginResponse)(nil), "metrixio.LoginResponse")
	proto.RegisterType((*Permission)(nil), "metrixio.Permission")
	proto.RegisterType((*GrantPermissions)(nil), "metrixio.GrantPermissions")
	proto.RegisterType((*RevokePermissions)(nil), "metrixio.RevokePermissions")
	proto.RegisterType((*GetPermissions)(nil), "metrixio.GetPermissions")
	proto.RegisterType((*HasPermissionsRequest)(nil), "metrixio.HasPermissionsRequest")
	proto.RegisterType((*HasPermissionsResponse)(nil), "metrixio.HasPermissionsResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AuthServiceClient is the client API for AuthService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AuthServiceClient interface {
	Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error)
	HasPermission(ctx context.Context, in *HasPermissionsRequest, opts ...grpc.CallOption) (*HasPermissionsResponse, error)
}

type authServiceClient struct {
	cc *grpc.ClientConn
}

func NewAuthServiceClient(cc *grpc.ClientConn) AuthServiceClient {
	return &authServiceClient{cc}
}

func (c *authServiceClient) Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error) {
	out := new(LoginResponse)
	err := c.cc.Invoke(ctx, "/metrixio.AuthService/Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authServiceClient) HasPermission(ctx context.Context, in *HasPermissionsRequest, opts ...grpc.CallOption) (*HasPermissionsResponse, error) {
	out := new(HasPermissionsResponse)
	err := c.cc.Invoke(ctx, "/metrixio.AuthService/HasPermission", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AuthServiceServer is the server API for AuthService service.
type AuthServiceServer interface {
	Login(context.Context, *LoginRequest) (*LoginResponse, error)
	HasPermission(context.Context, *HasPermissionsRequest) (*HasPermissionsResponse, error)
}

func RegisterAuthServiceServer(s *grpc.Server, srv AuthServiceServer) {
	s.RegisterService(&_AuthService_serviceDesc, srv)
}

func _AuthService_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/metrixio.AuthService/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).Login(ctx, req.(*LoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthService_HasPermission_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HasPermissionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).HasPermission(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/metrixio.AuthService/HasPermission",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).HasPermission(ctx, req.(*HasPermissionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AuthService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "metrixio.AuthService",
	HandlerType: (*AuthServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Login",
			Handler:    _AuthService_Login_Handler,
		},
		{
			MethodName: "HasPermission",
			Handler:    _AuthService_HasPermission_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/auth-service.proto",
}

func init() {
	proto.RegisterFile("proto/auth-service.proto", fileDescriptor_auth_service_73dfeeecb5bc5765)
}

var fileDescriptor_auth_service_73dfeeecb5bc5765 = []byte{
	// 363 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x93, 0x4f, 0x4f, 0xea, 0x40,
	0x14, 0xc5, 0x1f, 0xbc, 0xf0, 0x1e, 0xdc, 0x82, 0xd1, 0x09, 0x62, 0x43, 0x62, 0x84, 0xba, 0x61,
	0x43, 0x49, 0x30, 0x71, 0xe1, 0x4a, 0xd9, 0xa0, 0x89, 0x0b, 0xad, 0xac, 0xdc, 0x90, 0xb6, 0xdc,
	0x94, 0x11, 0xe8, 0xd4, 0xb9, 0x53, 0xe4, 0xdb, 0xf8, 0x55, 0x0d, 0x9d, 0x96, 0xe2, 0xdf, 0x85,
	0x09, 0xcb, 0x73, 0x7a, 0xf2, 0x3b, 0x99, 0x9b, 0x53, 0x30, 0x23, 0x29, 0x94, 0xe8, 0xb9, 0xb1,
	0x9a, 0x76, 0x09, 0xe5, 0x92, 0xfb, 0x68, 0x27, 0x16, 0x2b, 0x2f, 0x50, 0x49, 0xbe, 0xe2, 0xc2,
	0xba, 0x84, 0xea, 0xad, 0x08, 0x78, 0xe8, 0xe0, 0x73, 0x8c, 0xa4, 0x58, 0x1d, 0x4a, 0xf3, 0xb5,
	0x36, 0x0b, 0xad, 0x42, 0xa7, 0xe2, 0x68, 0xc1, 0x9a, 0x50, 0x8e, 0x5c, 0xa2, 0x17, 0x21, 0x27,
	0x66, 0x31, 0xf9, 0xb0, 0xd1, 0xd6, 0x3d, 0xd4, 0x52, 0x02, 0x45, 0x22, 0x24, 0x64, 0x6d, 0xa8,
	0xba, 0xbe, 0x8f, 0x44, 0x63, 0x25, 0x66, 0x98, 0x91, 0x0c, 0xed, 0x8d, 0xd6, 0x16, 0x3b, 0x06,
	0xc0, 0x55, 0xc4, 0x25, 0xd2, 0x98, 0x87, 0x29, 0xb1, 0x92, 0x3a, 0x37, 0xa1, 0x35, 0x00, 0xb8,
	0x43, 0xb9, 0xe0, 0x44, 0x5c, 0x24, 0xe5, 0x12, 0x49, 0xc4, 0xd2, 0xc7, 0x94, 0xb5, 0xd1, 0xcc,
	0x84, 0xff, 0xae, 0xaf, 0xb8, 0x08, 0xc9, 0x2c, 0xb6, 0xfe, 0x76, 0x2a, 0x4e, 0x26, 0xad, 0x09,
	0xec, 0x0f, 0xa5, 0x1b, 0xaa, 0x1c, 0x44, 0xeb, 0x34, 0xc5, 0xde, 0x13, 0xfa, 0x2a, 0x05, 0x65,
	0x92, 0x9d, 0x83, 0x11, 0xe5, 0xc1, 0x84, 0x65, 0xf4, 0xeb, 0x76, 0x76, 0x26, 0x3b, 0xa7, 0x38,
	0xdb, 0x41, 0x0b, 0xe1, 0xc0, 0xc1, 0xa5, 0x98, 0xe1, 0x6e, 0x6b, 0x3c, 0xd8, 0x1b, 0xe2, 0x8e,
	0x9f, 0x32, 0x83, 0xc3, 0x6b, 0x97, 0xb6, 0x3a, 0xb2, 0x49, 0xfc, 0x74, 0xff, 0xdf, 0x96, 0x99,
	0xd0, 0xf8, 0x58, 0xa6, 0xd7, 0xd3, 0x7f, 0x2d, 0x80, 0x71, 0x15, 0xab, 0xe9, 0x83, 0x1e, 0x2c,
	0xbb, 0x80, 0x52, 0x32, 0x2f, 0xd6, 0xc8, 0xa9, 0xdb, 0x8b, 0x6d, 0x1e, 0x7d, 0xf2, 0x35, 0xc9,
	0xfa, 0xc3, 0x46, 0x50, 0x7b, 0xd7, 0xc2, 0x4e, 0xf2, 0xec, 0x97, 0x6f, 0x6d, 0xb6, 0xbe, 0x0f,
	0x64, 0xd4, 0xc1, 0xe9, 0x63, 0x3b, 0xe0, 0x6a, 0x1a, 0x7b, 0xb6, 0x2f, 0x16, 0x3d, 0x9d, 0xef,
	0x72, 0xd1, 0xd3, 0x7f, 0x5b, 0x20, 0xe6, 0x6e, 0x18, 0x78, 0xff, 0x12, 0x75, 0xf6, 0x16, 0x00,
	0x00, 0xff, 0xff, 0xbb, 0x17, 0x06, 0x3e, 0x84, 0x03, 0x00, 0x00,
}
